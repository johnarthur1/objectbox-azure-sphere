#ifndef TESTENTITY_READER_H
#define TESTENTITY_READER_H

/* Generated by flatcc 0.5.3-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct TestEntity_table *TestEntity_table_t;
typedef const flatbuffers_uoffset_t *TestEntity_vec_t;
typedef flatbuffers_uoffset_t *TestEntity_mutable_vec_t;
#ifndef TestEntity_identifier
#define TestEntity_identifier flatbuffers_identifier
#endif
#define TestEntity_type_hash ((flatbuffers_thash_t)0x82c6f43a)
#define TestEntity_type_identifier "\x3a\xf4\xc6\x82"



struct TestEntity_table { uint8_t unused__; };

static inline size_t TestEntity_vec_len(TestEntity_vec_t vec)
__flatbuffers_vec_len(vec)
static inline TestEntity_table_t TestEntity_vec_at(TestEntity_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(TestEntity_table_t, vec, i, 0)
__flatbuffers_table_as_root(TestEntity)

__flatbuffers_define_scalar_field(0, TestEntity, id, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_scalar_field(1, TestEntity, simpleBoolean, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, TestEntity, simpleByte, flatbuffers_int8, int8_t, INT8_C(0))
__flatbuffers_define_scalar_field(3, TestEntity, simpleShort, flatbuffers_int16, int16_t, INT16_C(0))
__flatbuffers_define_scalar_field(4, TestEntity, simpleInt, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(5, TestEntity, simpleLong, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_scalar_field(6, TestEntity, simpleFloat, flatbuffers_float, float, 0.000000f)
__flatbuffers_define_scalar_field(7, TestEntity, simpleDouble, flatbuffers_double, double, 0.000000)
__flatbuffers_define_string_field(8, TestEntity, simpleString, 0)
__flatbuffers_define_vector_field(9, TestEntity, simpleByteArray, flatbuffers_int8_vec_t, 0)
__flatbuffers_define_scalar_field(10, TestEntity, simpleDate, flatbuffers_uint64, uint64_t, UINT64_C(0))

#include "flatcc/flatcc_epilogue.h"
#endif /* TESTENTITY_READER_H */
